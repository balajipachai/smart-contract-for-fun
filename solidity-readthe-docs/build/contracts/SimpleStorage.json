{
  "contractName": "SimpleStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "data",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "updateData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"updateData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"Balaji Pachai \",\"methods\":{\"getData()\":{\"return\":\"Data's latest value\"},\"updateData(uint256)\":{\"params\":{\"_value\":\"The value that has to be used for updating data\"}}},\"title\":\"SimpleStorage\"},\"userdoc\":{\"methods\":{\"constructor\":\"Constructor that sets data to the value passed in at the time of contract creation\",\"getData()\":{\"notice\":\"Function that returns the value of data\"},\"updateData(uint256)\":{\"notice\":\"This function will update data to the user defined value\"}},\"notice\":\"A SimpleStorage contract used for setting and fetching values to and from Blockchain\"}},\"settings\":{\"compilationTarget\":{\"/home/balaji/Desktop/learning/smart-contract-for-fun/solidity-readthe-docs/contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/balaji/Desktop/learning/smart-contract-for-fun/solidity-readthe-docs/contracts/SimpleStorage.sol\":{\"keccak256\":\"0x681fcc1babb4e544f0efcd19a9515ab97eaf56d03274a082f54686094d3f44b5\",\"urls\":[\"bzzr://4bcb5371e84c2385286be263647e232a695a76a4b5bc10b28a32dbdc1ee00efc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806102968339810180604052602081101561003057600080fd5b810190808051906020019092919050505060008111151561009c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180610259603d913960400191505060405180910390fd5b80600081905550506101a6806100b36000396000f3fe608060405234801561001057600080fd5b506004361061005e576000357c01000000000000000000000000000000000000000000000000000000009004806309e96008146100635780633bc5de301461009157806373d4a13a146100af575b600080fd5b61008f6004803603602081101561007957600080fd5b81019080803590602001909291905050506100cd565b005b610099610132565b6040518082815260200191505060405180910390f35b6100b761013b565b6040518082815260200191505060405180910390f35b600081111515610128576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806101426039913960400191505060405180910390fd5b8060008190555050565b60008054905090565b6000548156fe696e2053696d706c6553746f726167653a7365744461746128292e2056616c7565206d7573742062652067726561746572207468616e20302ea165627a7a7230582065baf5284f47dc994bf98781989e096305ab70ac73ac9704ddd5ccc6dbf760bd0029696e2053696d706c6553746f726167653a636f6e7374727563746f7228292e2056616c7565206d7573742062652067726561746572207468616e20302e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005e576000357c01000000000000000000000000000000000000000000000000000000009004806309e96008146100635780633bc5de301461009157806373d4a13a146100af575b600080fd5b61008f6004803603602081101561007957600080fd5b81019080803590602001909291905050506100cd565b005b610099610132565b6040518082815260200191505060405180910390f35b6100b761013b565b6040518082815260200191505060405180910390f35b600081111515610128576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806101426039913960400191505060405180910390fd5b8060008190555050565b60008054905090565b6000548156fe696e2053696d706c6553746f726167653a7365744461746128292e2056616c7565206d7573742062652067726561746572207468616e20302ea165627a7a7230582065baf5284f47dc994bf98781989e096305ab70ac73ac9704ddd5ccc6dbf760bd0029",
  "sourceMap": "173:804:1:-;;;327:160;8:9:-1;5:2;;;30:1;27;20:12;5:2;327:160:1;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;327:160:1;;;;;;;;;;;;;;;;390:1;381:6;:10;373:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:6;467:4;:13;;;;327:160;173:804;;;;;;",
  "deployedSourceMap": "173:804:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:804:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;636:163:1;;;;;;;;;;;;;;;;;:::i;:::-;;897:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;202:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;636:163;706:1;697:6;:10;689:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:6;779:4;:13;;;;636:163;:::o;897:77::-;937:7;963:4;;956:11;;897:77;:::o;202:19::-;;;;:::o",
  "source": "pragma solidity 0.5.2;\n\n/// @title SimpleStorage\n/// @author Balaji Pachai \n/// @notice A SimpleStorage contract used for setting and fetching values to and from Blockchain\ncontract SimpleStorage {\n    uint256 public data;\n\n    /// @notice Constructor that sets data to the value passed in at the time of contract creation\n    constructor (uint256 _value) public {\n        require(_value > 0, \"in SimpleStorage:constructor(). Value must be greater than 0.\");\n        data = _value;\n    }\n\n    /// @notice This function will update data to the user defined value\n    /// @param _value The value that has to be used for updating data\n    function updateData(uint256 _value) public {\n        require(_value > 0, \"in SimpleStorage:setData(). Value must be greater than 0.\");\n        data = _value;\n    }\n\n    /// @notice Function that returns the value of data\n    /// @return Data's latest value\n    function getData() public view returns (uint256) {\n        return data;\n    }\n\n}",
  "sourcePath": "/home/balaji/Desktop/learning/smart-contract-for-fun/solidity-readthe-docs/contracts/SimpleStorage.sol",
  "ast": {
    "absolutePath": "/home/balaji/Desktop/learning/smart-contract-for-fun/solidity-readthe-docs/contracts/SimpleStorage.sol",
    "exportedSymbols": {
      "SimpleStorage": [
        103
      ]
    },
    "id": 104,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title SimpleStorage\n @author Balaji Pachai \n @notice A SimpleStorage contract used for setting and fetching values to and from Blockchain",
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103
        ],
        "name": "SimpleStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 60,
            "name": "data",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "202:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "202:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "363:124:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "381:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "390:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "381:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e2053696d706c6553746f726167653a636f6e7374727563746f7228292e2056616c7565206d7573742062652067726561746572207468616e20302e",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "393:63:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad3b35144adb364c78718ad1e803ddd7f1b455bc2719a3efdd17b4fbdf257721",
                          "typeString": "literal_string \"in SimpleStorage:constructor(). Value must be greater than 0.\""
                        },
                        "value": "in SimpleStorage:constructor(). Value must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad3b35144adb364c78718ad1e803ddd7f1b455bc2719a3efdd17b4fbdf257721",
                          "typeString": "literal_string \"in SimpleStorage:constructor(). Value must be greater than 0.\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        121,
                        122
                      ],
                      "referencedDeclaration": 122,
                      "src": "373:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "373:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "373:84:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "467:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "474:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "467:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "467:13:1"
                }
              ]
            },
            "documentation": "@notice Constructor that sets data to the value passed in at the time of contract creation",
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "340:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:16:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:1"
            },
            "scope": 103,
            "src": "327:160:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "679:120:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "706:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "697:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e2053696d706c6553746f726167653a7365744461746128292e2056616c7565206d7573742062652067726561746572207468616e20302e",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "709:59:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a8353ed98b662466e49e31fc99718bcfc49291fe82ad9c42803b3791c7f4fd9",
                          "typeString": "literal_string \"in SimpleStorage:setData(). Value must be greater than 0.\""
                        },
                        "value": "in SimpleStorage:setData(). Value must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a8353ed98b662466e49e31fc99718bcfc49291fe82ad9c42803b3791c7f4fd9",
                          "typeString": "literal_string \"in SimpleStorage:setData(). Value must be greater than 0.\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        121,
                        122
                      ],
                      "referencedDeclaration": 122,
                      "src": "689:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "689:80:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "779:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "786:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "779:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "779:13:1"
                }
              ]
            },
            "documentation": "@notice This function will update data to the user defined value\n @param _value The value that has to be used for updating data",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "656:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:16:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:1"
            },
            "scope": 103,
            "src": "636:163:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "946:28:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "963:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "956:11:1"
                }
              ]
            },
            "documentation": "@notice Function that returns the value of data\n @return Data's latest value",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:2:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "937:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "936:9:1"
            },
            "scope": 103,
            "src": "897:77:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "173:804:1"
      }
    ],
    "src": "0:977:1"
  },
  "legacyAST": {
    "absolutePath": "/home/balaji/Desktop/learning/smart-contract-for-fun/solidity-readthe-docs/contracts/SimpleStorage.sol",
    "exportedSymbols": {
      "SimpleStorage": [
        103
      ]
    },
    "id": 104,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title SimpleStorage\n @author Balaji Pachai \n @notice A SimpleStorage contract used for setting and fetching values to and from Blockchain",
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103
        ],
        "name": "SimpleStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 60,
            "name": "data",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "202:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "202:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "363:124:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "381:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "390:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "381:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e2053696d706c6553746f726167653a636f6e7374727563746f7228292e2056616c7565206d7573742062652067726561746572207468616e20302e",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "393:63:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad3b35144adb364c78718ad1e803ddd7f1b455bc2719a3efdd17b4fbdf257721",
                          "typeString": "literal_string \"in SimpleStorage:constructor(). Value must be greater than 0.\""
                        },
                        "value": "in SimpleStorage:constructor(). Value must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad3b35144adb364c78718ad1e803ddd7f1b455bc2719a3efdd17b4fbdf257721",
                          "typeString": "literal_string \"in SimpleStorage:constructor(). Value must be greater than 0.\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        121,
                        122
                      ],
                      "referencedDeclaration": 122,
                      "src": "373:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "373:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "373:84:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "467:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "474:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "467:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "467:13:1"
                }
              ]
            },
            "documentation": "@notice Constructor that sets data to the value passed in at the time of contract creation",
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "340:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:16:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:1"
            },
            "scope": 103,
            "src": "327:160:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "679:120:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "706:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "697:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e2053696d706c6553746f726167653a7365744461746128292e2056616c7565206d7573742062652067726561746572207468616e20302e",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "709:59:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a8353ed98b662466e49e31fc99718bcfc49291fe82ad9c42803b3791c7f4fd9",
                          "typeString": "literal_string \"in SimpleStorage:setData(). Value must be greater than 0.\""
                        },
                        "value": "in SimpleStorage:setData(). Value must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a8353ed98b662466e49e31fc99718bcfc49291fe82ad9c42803b3791c7f4fd9",
                          "typeString": "literal_string \"in SimpleStorage:setData(). Value must be greater than 0.\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        121,
                        122
                      ],
                      "referencedDeclaration": 122,
                      "src": "689:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "689:80:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "779:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "786:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "779:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "779:13:1"
                }
              ]
            },
            "documentation": "@notice This function will update data to the user defined value\n @param _value The value that has to be used for updating data",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "656:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:16:1"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:1"
            },
            "scope": 103,
            "src": "636:163:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "946:28:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "963:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "956:11:1"
                }
              ]
            },
            "documentation": "@notice Function that returns the value of data\n @return Data's latest value",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:2:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "937:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "936:9:1"
            },
            "scope": 103,
            "src": "897:77:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "173:804:1"
      }
    ],
    "src": "0:977:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x6Cc21374d6ad8B5b146d7Be4eCddcF6E96644935",
      "transactionHash": "0x51441fef0cdc8708029ec728b34fac9268f4fac78dfac55bc900c59b543651b6"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-19T09:28:45.626Z",
  "devdoc": {
    "author": "Balaji Pachai ",
    "methods": {
      "getData()": {
        "return": "Data's latest value"
      },
      "updateData(uint256)": {
        "params": {
          "_value": "The value that has to be used for updating data"
        }
      }
    },
    "title": "SimpleStorage"
  },
  "userdoc": {
    "methods": {
      "constructor": "Constructor that sets data to the value passed in at the time of contract creation",
      "getData()": {
        "notice": "Function that returns the value of data"
      },
      "updateData(uint256)": {
        "notice": "This function will update data to the user defined value"
      }
    },
    "notice": "A SimpleStorage contract used for setting and fetching values to and from Blockchain"
  }
}